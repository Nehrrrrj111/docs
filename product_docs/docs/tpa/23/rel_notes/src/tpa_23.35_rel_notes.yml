product: Trusted Postgres Architect
version: 23.35
date: 29 October 2024
intro: |
  New features, enhancements, bug fixes, and other changes in Trusted Postgres Architect 23.35 include the following:
highlights: |
  - More Trust
  - More Postgres
  - More Architect
relnotes:
- details: |
    `PermissionsStartOnly` has been deprecated and is now achieved via  `ExecStartPost=+/bin/bash...` syntax.
  relnote: Remove deprecated `PermissionStartOnly` in postgres.service.j2 template  
  impact: low
  jira:
  - TPA-762
  type: Change
- details: | 
    Fixed a bug whereby the test that ensures the current pgd-proxy configuration
    matches the expected configuration would fail for version < 5.5.0. This fix ensures
    that TPA won't try to query configuration keys added in version 5.5.0.
  impact: low
  jira:
  - TPA-819
  relnote: Fix tpaexec test for pgd-proxy config verification
  type: Bug Fix
- details: |
    The PostGIS package will automatically be added when a user specifies  `postgis`
    as an entry in either `postgres_extensions` or the list of extensions named under
    `postgres_databases`.  Also enables the CRB (Code Ready Builder) repository for
    RHEL-compatible distributions so PostGIS dependencies can be installed.
  impact: low
  jira:
  - TPA-771
  relnote: Add `postgis` to list of recognized extensions
  type: Change
- details: | 
    Certain required privileges are granted to Postgres role, `barman_role`,
    which is then granted to the `barman` Postgres user. This avoids creating the
    `barman` user as a superuser. This role can also be granted to other Postgres
    users by adding it to their `granted_roles` list using `postgres/createuser`.  The
    `barman_role` is created as part of the Barman tasks; if Barman is not used, this
    role will not be created. Therefore, the task that grants privileges to this role
    is only executed if the `barman_role` username is in the list  of Postgres users
    that are created.  The ''barman'' user now has `NOSUPERUSER` explicitly specified
    as a role attribute.  If a cluster was deployed with a previous TPA version (which
    created the ''barman''  user as a superuser), deploying with this version will
    remove the `superuser` role attribute from the `barman` user.
  impact: low
  jira:
  - TPA-148
  - TPA-818
  relnote: The `barman` Postgres user should not be a superuser
  type: Change
- details: |
    A `primary_slot_name` is configured on the primary node to  ensure the
    old primary uses a physical slot for replication  during an EFM switchover. However,
    ''bdr_init_physical'' attempts  to use it for node initialisation and hangs indefinitely
    since  the slot does not exist in a PGD installation.  This `primary_slot_name`
    is now conditionally set explicitly when the  `failover_manager` is EFM to avoid
    setting it unnecessarily.
  impact: low
  jira:
  - TPA-712
  relnote: '`primary_slot_name` added for EFM compatibility interferes with `bdr_init_physical` '
  type: Bug Fix
- details: |
    If the `pgdcli_package_version` is specified in `config.yml`, the  `bash-completion`
    package is incorrectly named because the  `packages_for` filter erroneously appends
    the `pgdcli_package_version`  to the  package name. This results in an attempt
    to download a nonexistant package.  The `bash-completion` package is now appended
    to the list after the `packages_for` filter, since it''s version is independent
    from the  `pgdcli_package_version`.
  impact: low
  jira:
  - TPA-794
  relnote: Download correct `bash-completion` package version
  type: Bug Fix
- details: |
    Fixed an issue whereby in some cases error messages would be repeated
    even after successful tasks.
  impact: low
  jira:
  - TPA-812
  relnote: Clear error message stack after each task
  type: Bug Fix
- details: |
    Improve postgres-monitor script to better manage recoverable errors and
    add retries on network errors to ensure that it won''t return failure when it
    just didn't allow enough time for postgres service to  be fully started.
  impact: low
  jira:
  - TPA-796
  relnote: Improve postgres-monitor script
  type: Change
- details: |
    Fixed an issue whereby new replicas in patroni clusters would fail with
    errors related to replication slots.
  impact: low
  jira:
  - TPA-792
  - TPA-781
  relnote: Enable new replicas in patroni clusters
  type: Bug Fix
- details: |
    A support ticket questioned why the `pemserver` and `barman` nodes are
    added to the `Allowed node host list` in EFM when they are not  relevant to EFM
    functions. Refactored the task that writes the `efm.node` configuration to only
    include those nodes that have `efm` in their list  of roles.
  impact: low
  jira:
  - TPA-817
  relnote: Only add nodes with `efm` role to cluster `efm.nodes` file
  type: Change
- details: | 
    'If `--enable-pem` and `--enable-pg-backup-api` are passed to `tpaexec
    configure`, `pem-agent` is added twice to the `barman` node if it is also a `witness`.  Fixed
    by by consolidating both `if` statements together to only evaluate  the conditions
    once. '
  impact: low
  jira:
  - TPA-793
  relnote: Add `pem-agent` role on barman nodes at most once for M1 architecture
  type: Bug Fix
- details: |
    Fixed a bug whereby if the user excluded the `pkg` selector, later pem-related
    tasks would fail because the pem_python_executable fact had not been set.
  impact: low
  jira:
  - TPA-814
  relnote: set pem_python_executable outside pkg role
  type: Bug Fix
- details: | 
    The `--efm-install-path` and `--efm-cluster-name` flags are set when a  PEM
    server is registered on an EFM node.   The `Streaming Replication`, `Failover
    Manager Node Status` and  `Failover Manager Cluster Info` probes are enabled when
    a PEM agent is  registered on an EFM node. '
  impact: low
  jira:
  - TPA-586
  relnote: Enable EFM probes when a PEM agent is registered on an EFM node
  type: Change